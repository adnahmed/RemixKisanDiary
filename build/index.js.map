{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/sandbox/app/root.tsx", "../app/components/Header.tsx", "../app/root.tsx", "../app/components/Footer.tsx", "/sandbox/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import type { MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\nimport { createContext } from 'react'\nimport Header from '~/components/Header'\nimport Footer from '~/components/Footer'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const MyContext = createContext('default')\n\nfunction Document({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"root-body\">\n        <MyContext.Provider value=\"bonjour!\">\n          <Header />\n        </MyContext.Provider>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n        <MyContext.Provider value=\"au revoir!\">\n          <Footer />\n        </MyContext.Provider>\n      </body>\n    </html>\n  )\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  )\n}\n", "import { useContext } from 'react'\nimport { MyContext } from '~/root'\n\nexport default function Header() {\n  const result = useContext(MyContext)\n  console.log(result)\n  return <h1>Header {result}</h1>\n}\n", "import type { MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\nimport { createContext } from 'react'\nimport Header from '~/components/Header'\nimport Footer from '~/components/Footer'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const MyContext = createContext('default')\n\nfunction Document({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"root-body\">\n        <MyContext.Provider value=\"bonjour!\">\n          <Header />\n        </MyContext.Provider>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n        <MyContext.Provider value=\"au revoir!\">\n          <Footer />\n        </MyContext.Provider>\n      </body>\n    </html>\n  )\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  )\n}\n", "import { useContext } from 'react'\nimport { MyContext } from '~/root'\n\nexport default function Footer() {\n  const result = useContext(MyContext)\n  console.log(result)\n  return <h3>Footer {result}</h3>\n}\n", "export default function Index() {\n  return (\n    <div className=\"m-2\">\n      <h1 className=\"text-2xl font-bold\">Welcome to Remix Starter!</h1>\n    </div>\n  )\n}\n", "export default {'version':'249e7cb7','entry':{'module':'/build/entry.client-CU5IULVY.js','imports':['/build/_shared/chunk-PNNKWNTV.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-Z3424M2A.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-JZEW7OII.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-249E7CB7.js'};", "\nimport * as entryServer from \"/sandbox/app/entry.server.tsx\";\nimport * as route0 from \"/sandbox/app/root.tsx\";\nimport * as route1 from \"/sandbox/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO;AACP,oBAA8B;;;ACT9B,oBAA2B;;;ACC3B,oBAOO;AACP,oBAA8B;;;ACT9B,oBAA2B;AAGZ,kBAAkB;AAC/B,QAAM,SAAS,8BAAW;AAC1B,UAAQ,IAAI;AACZ,SAAO,oCAAC,MAAD,MAAI,WAAQ;AAAA;;;ADad,IAAM,YAAY,iCAAc;;;ADhBxB,kBAAkB;AAC/B,QAAM,SAAS,8BAAW;AAC1B,UAAQ,IAAI;AACZ,SAAO,oCAAC,MAAD,MAAI,WAAQ;AAAA;;;ADOd,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGL,IAAM,aAAY,iCAAc;AAEvC,kBAAkB,EAAE,YAA2C;AAC7D,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,WAAU,UAAX;AAAA,IAAoB,OAAM;AAAA,KACxB,oCAAC,QAAD,QAED,UACD,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD,OACA,oCAAC,WAAU,UAAX;AAAA,IAAoB,OAAM;AAAA,KACxB,oCAAC,QAAD;AAAA;AAOK,eAAe;AAC5B,SACE,oCAAC,UAAD,MACE,oCAAC,sBAAD;AAAA;;;AI/CN;AAAA;AAAA;AAAA;AAAe,iBAAiB;AAC9B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqB;AAAA;;;ACHzC,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACKrqB,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
